#suite LCP

#include "fcs.c"
#include "hdlc.c"
#include "lcp.c"
#include "ipv6cp.c"


#test check_lcp_reject_protocol
uint8_t ppp_frame[] = { 0xFF, 0x03, 0x80, 0x021, 0x01, 0x02 };
uint8_t fbuf[2000];
uint8_t buffer[2000];

// Generate a new frame
FILE* stream = fmemopen(fbuf, sizeof(fbuf), "wb+");
lcp_reject_protocol(stream, ppp_frame, sizeof(ppp_frame));

// Read the frame back in again
rewind(stream);
int len = hdlc_read_frame(stream, buffer);

ck_assert_uint_eq(len, 14);
ck_assert_uint_eq(hdlc_check_frame(buffer, len), 1);
ck_assert_mem_eq(
  buffer,
  "\xff\x03\xc0\x21"
  "\x08\x01\x00\x08"
  "\x80\x21\x01\x02"
  "\x92\x3e",
  len
);
