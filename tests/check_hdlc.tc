#suite Frame

#include "fcs.c"
#include "hdlc.c"


#test check_read_frame
uint8_t encoded_frame[] = {
  0x7e, 0xff, 0x7d, 0x23, 0xc0, 0x21, 0x7d, 0x21,
  0x7d, 0x21, 0x7d, 0x20, 0x7d, 0x34, 0x7d, 0x22,
  0x7d, 0x26, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20,
  0x7d, 0x20, 0x7d, 0x25, 0x7d, 0x26, 0xfc, 0x7d,
  0x3c, 0xec, 0xe3, 0x7d, 0x27, 0x7d, 0x22, 0x7d,
  0x28, 0x7d, 0x22, 0x48, 0xe8, 0x7e
};

FILE* stream = fmemopen(encoded_frame, sizeof(encoded_frame), "rb");
uint8_t buffer[100];
int len = hdlc_read_frame(stream, buffer);
ck_assert_uint_eq(len, 26);
ck_assert_uint_eq(buffer[0], 0xff);
ck_assert_uint_eq(buffer[1], 0x03);
ck_assert_uint_eq(buffer[2], 0xC0);
ck_assert_uint_eq(buffer[3], 0x21);


#test check_check_frame
const uint8_t ppp_frame[] = {
  0xFF, 0x03, 0xC0, 0x21, 0x01, 0x00, 0x00, 0x0E,
  0x02, 0x06, 0x00, 0x00, 0x00, 0x00, 0x07, 0x02,
  0x08, 0x02, 0xDD, 0x31
};

ck_assert_uint_eq(hdlc_check_frame(ppp_frame, sizeof(ppp_frame)), 1);

#test check_check_frame_too_short
const uint8_t ppp_frame[] = {
  0xFF, 0x03, 0x1c, 0xc2
};

ck_assert_uint_eq(hdlc_check_frame(ppp_frame, sizeof(ppp_frame)), 0);


#test check_check_frame_wrong_address
const uint8_t ppp_frame[] = {
  0xF0, 0x03, 0xC0, 0x21, 0x01, 0x00, 0x00, 0x0E,
  0x02, 0x06, 0x00, 0x00, 0x00, 0x00, 0x07, 0x02,
  0x08, 0x02, 0x05, 0x34
};

ck_assert_uint_eq(hdlc_check_frame(ppp_frame, sizeof(ppp_frame)), 0);


#test check_check_frame_wrong_control
const uint8_t ppp_frame[] = {
  0xFF, 0xFF, 0xC0, 0x21, 0x01, 0x00, 0x00, 0x0E,
  0x02, 0x06, 0x00, 0x00, 0x00, 0x00, 0x07, 0x02,
  0x08, 0x02, 0x36, 0x8C
};

ck_assert_uint_eq(hdlc_check_frame(ppp_frame, sizeof(ppp_frame)), 0);


#test check_check_frame_wrong_fcs
const uint8_t ppp_frame[] = {
  0xFF, 0x03, 0xC0, 0x21, 0x01, 0x00, 0x00, 0x0E,
  0x02, 0x06, 0x00, 0x00, 0x00, 0x00, 0x07, 0x02,
  0x08, 0x02, 0xDD, 0xFF
};

ck_assert_uint_eq(hdlc_check_frame(ppp_frame, sizeof(ppp_frame)), 0);
