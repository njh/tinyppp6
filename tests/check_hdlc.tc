#suite Frame

#include "fcs.c"
#include "hdlc.c"
#include "test_helpers.c"


#test check_read_frame
FILE *stream = open_fixture("frame_encoded");
uint8_t buffer[PACKET_BUF_SIZE];
hdlc_init();
int len = hdlc_read_frame(stream, buffer);
ck_assert_uint_eq(len, 26);
ck_assert_uint_eq(buffer[0], 0xff);
ck_assert_uint_eq(buffer[1], 0x03);
ck_assert_uint_eq(buffer[2], 0xC0);
ck_assert_uint_eq(buffer[3], 0x21);


#test check_read_frame_empty
FILE *stream = open_fixture("frame_empty");
uint8_t buffer[PACKET_BUF_SIZE];
hdlc_init();
int len = hdlc_read_frame(stream, buffer);
ck_assert_uint_eq(len, 0);


#test check_hdlc_check_frame
uint8_t ppp_frame[PACKET_BUF_SIZE];
int size = read_fixture("frame_valid", ppp_frame, sizeof(ppp_frame));
ck_assert_uint_eq(hdlc_check_frame(ppp_frame, size), 1);


#test check_hdlc_encode_frame
uint8_t ppp_frame[] = { 0x01, 0xFF, 0x7D, 0x7E };
uint8_t buffer[PACKET_BUF_SIZE];

int len = hdlc_encode_frame(buffer, 0xC021, ppp_frame, sizeof(ppp_frame));
ck_assert_uint_eq(len, 16);

ck_assert_mem_eq(
    buffer, "\x7E\xFF\x7D\x23\xC0\x21\x7D\x21\xFF\x7D\x5D\x7D\x5E\x9F\xB5\x7E", 16
);


#test check_hdlc_write_frame
uint8_t ppp_frame[] = { 0x01, 0xFF, 0x7D, 0x7E };
uint8_t buffer[PACKET_BUF_SIZE];

FILE *stream = tmpfile();
hdlc_write_frame(stream, 0xC021, ppp_frame, sizeof(ppp_frame));
ck_assert_uint_eq(ftell(stream), 16);

rewind(stream);
fread(buffer, 1, 16, stream);
ck_assert_mem_eq(
    buffer, "\x7E\xFF\x7D\x23\xC0\x21\x7D\x21\xFF\x7D\x5D\x7D\x5E\x9F\xB5\x7E", 16
);


#test check_hdlc_check_frame_too_short
const uint8_t ppp_frame[] = { 0xFF, 0x03, 0x1C, 0xC2 };
ck_assert_uint_eq(hdlc_check_frame(ppp_frame, sizeof(ppp_frame)), 0);


#test check_hdlc_check_
uint8_t ppp_frame[PACKET_BUF_SIZE];
int size = read_fixture("frame_wrong_address", ppp_frame, sizeof(ppp_frame));
ck_assert_uint_eq(hdlc_check_frame(ppp_frame, size), 0);


#test check_hdlc_check_frame_wrong_control
uint8_t ppp_frame[PACKET_BUF_SIZE];
int size = read_fixture("frame_wrong_control", ppp_frame, PACKET_BUF_SIZE);
ck_assert_uint_eq(hdlc_check_frame(ppp_frame, size), 0);


#test check_hdlc_check_frame_wrong_fcs
uint8_t ppp_frame[PACKET_BUF_SIZE];
int size = read_fixture("frame_wrong_fcs", ppp_frame, PACKET_BUF_SIZE);
ck_assert_uint_eq(hdlc_check_frame(ppp_frame, size), 0);
