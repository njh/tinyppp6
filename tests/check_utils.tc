#suite Utils

#include "tinyppp6.h"


#test check_get_uint8
uint8_t buffer[] = {0x01, 0x02, 0x03, 0x04};

ck_assert_uint_eq(0x01, BUF_GET_UINT8(buffer, 0));
ck_assert_uint_eq(0x02, BUF_GET_UINT8(buffer, 1));
ck_assert_uint_eq(0x03, BUF_GET_UINT8(buffer, 2));
ck_assert_uint_eq(0x04, BUF_GET_UINT8(buffer, 3));


#test check_set_uint8
uint8_t buffer[] = {0x00, 0x00, 0x00, 0x00};
uint8_t expected[] = {0x01, 0x02, 0x03, 0x04};

BUF_SET_UINT8(buffer, 0, 0x01);
BUF_SET_UINT8(buffer, 1, 0x02);
BUF_SET_UINT8(buffer, 2, 0x03);
BUF_SET_UINT8(buffer, 3, 0x04);

ck_assert_mem_eq(buffer, expected, sizeof(expected));


#test check_get_uint16
uint8_t buffer[] = {0x01, 0x02, 0x03, 0x04};

ck_assert_uint_eq(0x0102, BUF_GET_UINT16(buffer, 0));
ck_assert_uint_eq(0x0304, BUF_GET_UINT16(buffer, 2));


#test check_set_uint16
uint8_t buffer[] = {0x00, 0x00, 0x00, 0x00};
uint8_t expected[] = {0x01, 0x02, 0x03, 0x04};

BUF_SET_UINT16(buffer, 0, 0x0102);
BUF_SET_UINT16(buffer, 2, 0x0304);

ck_assert_mem_eq(buffer, expected, sizeof(expected));


#test check_get_uint32
uint8_t buffer[] = {0x01, 0x02, 0x03, 0x04, 0x50, 0x60, 0x70, 0x80};

ck_assert_uint_eq(0x01020304, BUF_GET_UINT32(buffer, 0));
ck_assert_uint_eq(0x50607080, BUF_GET_UINT32(buffer, 4));


#test check_set_uint32
uint8_t buffer[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
uint8_t expected[] = {0x01, 0x02, 0x03, 0x04, 0x50, 0x60, 0x70, 0x80};

BUF_SET_UINT32(buffer, 0, 0x01020304);
BUF_SET_UINT32(buffer, 4, 0x50607080);

ck_assert_mem_eq(buffer, expected, sizeof(expected));
